interface ImageState {
  loaded: boolean;
  error: boolean;
  url: string;
  element?: HTMLImageElement;
  timestamp: number;
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
 */
class ImageCache {
  private static instance: ImageCache;
  private cache: Map<string, ImageState> = new Map();
  private loadPromises: Map<string, Promise<HTMLImageElement>> = new Map();
  private defaultImage: string = '/uploads/default.jpg';
  private defaultAvatarImage: string = '/uploads/default-avatar.jpg';
  private defaultProjectImage: string = '/uploads/default-project.jpg';
  private defaultResumeImage: string = '/uploads/default-resume.jpg';
  private preloadQueue: string[] = [];
  private isProcessingQueue: boolean = false;
  private concurrentLoads: number = 5; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
  private domainRegex = /^(?:https?:\/\/)?(?:[^@\n]+@)?(?:www\.)?([^:/\n?]+)/;
  private apiBasePaths = ['/api/users', '/api/projects', '/api/resumes', '/api/public'];

  private constructor() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è SSR-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    if (typeof window !== 'undefined') {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      this.preloadDefaultImages();
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞ –ø–æ —Ç–∞–π–º–µ—Ä—É
      setInterval(() => this.clearOldCache(), 3600000); // –†–∞–∑ –≤ —á–∞—Å
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      console.log("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã");
      setTimeout(() => {
        this.preloadFromApi();
      }, 3000); // –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
      window.addEventListener('online', () => this.handleOnlineStatusChange(true));
      window.addEventListener('offline', () => this.handleOnlineStatusChange(false));
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä –∫—ç—à–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (Singleton)
   */
  public static getInstance(): ImageCache {
    if (!ImageCache.instance) {
      ImageCache.instance = new ImageCache();
      console.log("üñºÔ∏è ImageCache –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
    }
    return ImageCache.instance;
  }

  /**
   * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   */
  private preloadDefaultImages(): void {
    this.loadImage(this.defaultImage).catch(() => {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", this.defaultImage);
    });
    
    this.loadImage(this.defaultAvatarImage).catch(() => {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞:", this.defaultAvatarImage);
    });
    
    this.loadImage(this.defaultProjectImage).catch(() => {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:", this.defaultProjectImage);
    });
    
    this.loadImage(this.defaultResumeImage).catch(() => {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ:", this.defaultResumeImage);
    });
  }

  /**
   * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param url –ò—Å—Ö–æ–¥–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –º–∞—Å—Å–∏–≤ URL
   * @returns –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π URL
   */
  public normalizeUrl(url: string | string[] | undefined | null): string {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ null –∏–ª–∏ undefined
    if (!url) return '';
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞ URL (–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç)
    if (Array.isArray(url)) {
      console.debug("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –º–∞—Å—Å–∏–≤ URL. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:", url);
      return url.length > 0 ? this.normalizeUrl(url[0]) : '';
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ —Ç–∏–ø–∞
    if (typeof url !== 'string') {
      console.debug("‚ö†Ô∏è URL –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π:", url);
      return '';
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ JSON-—Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –º–∞—Å—Å–∏–≤
    if (url.startsWith('[') && url.endsWith(']')) {
      try {
        const parsedUrls = JSON.parse(url);
        console.debug("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ JSON-—Å—Ç—Ä–æ–∫–∞ —Å –º–∞—Å—Å–∏–≤–æ–º URL:", parsedUrls);
        if (Array.isArray(parsedUrls) && parsedUrls.length > 0) {
          // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º normalizeUrl –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
          return this.normalizeUrl(parsedUrls[0]);
        }
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∫ –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
        console.debug("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å—Ç—Ä–æ–∫—É –∫–∞–∫ JSON. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É:", url);
      }
    }
    
    // –£–¥–∞–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    let cleanUrl = url.replace(/^"+|"+$/g, '');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    if (!cleanUrl.trim()) return '';
    
    // –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –£–¥–∞–ª—è–µ–º –ª—é–±—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ —Å–ª–µ—à–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
    // –≠—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ URL —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ JSON —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ª–µ—à–∞–º–∏
    // –∏–ª–∏ –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å –∫–∞–∫–∏–º–∏-—Ç–æ –∞—Ä–µ—Ñ–∞–∫—Ç–∞–º–∏
    cleanUrl = cleanUrl.replace(/^["'\/\\]+|["'\/\\]+$/g, '');
    
    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    if (!cleanUrl.trim()) return '';
    
    // –ï—Å–ª–∏ URL —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω—ã–º
    if (cleanUrl.startsWith('http')) {
      return cleanUrl;
    }
    
    // –ï—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "/uploads" - –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ª—É—á–∞–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    if (cleanUrl.startsWith('/uploads')) {
      return cleanUrl;
    }
    
    // –ï—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "uploads/" (–±–µ–∑ —Å–ª–µ—à–∞ –≤ –Ω–∞—á–∞–ª–µ)
    if (cleanUrl.startsWith('uploads/')) {
      return `/${cleanUrl}`;
    }
    
    // –ï—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ —Å –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–±–µ–∑ "uploads/")
    if (!cleanUrl.startsWith('/')) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ URL —Å–ª–µ—à –≤–æ–æ–±—â–µ
      if (cleanUrl.includes('/')) {
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞–∫–æ–π-—Ç–æ –¥—Ä—É–≥–æ–π –ø—É—Ç—å, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º / –≤ –Ω–∞—á–∞–ª–æ
        return `/${cleanUrl}`;
      } else {
        // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ uploads
        return `/uploads/${cleanUrl}`;
      }
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
    return cleanUrl;
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–æ–º–µ–Ω –∏–∑ URL
   * @param url URL –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns –î–æ–º–µ–Ω
   */
  private extractDomain(url: string): string {
    const match = url.match(this.domainRegex);
    return (match && match[1]) ? match[1] : '';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –≤–Ω–µ—à–Ω–∏–º (–Ω–µ —Å —Ç–µ–∫—É—â–µ–≥–æ –¥–æ–º–µ–Ω–∞)
   * @param url URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns true –µ—Å–ª–∏ URL –≤–Ω–µ—à–Ω–∏–π
   */
  private isExternalUrl(url: string): boolean {
    if (!url) return false;
    if (!url.startsWith('http')) return false;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
    const currentDomain = window.location.hostname;
    const urlDomain = this.extractDomain(url);
    
    return urlDomain !== currentDomain;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
   * @param isOnline –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
   */
  private handleOnlineStatusChange(isOnline: boolean): void {
    if (isOnline) {
      console.log("üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ –∫—ç—à–∞ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ—à–∏–±–∫–∞–º–∏
      for (const [url, state] of this.cache.entries()) {
        if (state.error) {
          this.cache.delete(url);
          this.preloadImage(url);
        }
      }
    } else {
      console.log("üì¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è");
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param url URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
   * @returns Promise —Å HTMLImageElement
   */
  public loadImage(url: string): Promise<HTMLImageElement> {
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º URL
    const normalizedUrl = this.normalizeUrl(url);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–º–∏—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
    if (this.loadPromises.has(normalizedUrl)) {
      return this.loadPromises.get(normalizedUrl)!;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à, –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    if (this.cache.has(normalizedUrl)) {
      const cachedState = this.cache.get(normalizedUrl)!;
      
      // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ –∏ —É –Ω–∞—Å –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
      if (cachedState.loaded && !cachedState.error && cachedState.element) {
        return Promise.resolve(cachedState.element);
      }
      
      // –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏
      if (cachedState.error && (Date.now() - cachedState.timestamp > 300000)) { // 5 –º–∏–Ω—É—Ç
        this.cache.delete(normalizedUrl);
      } else if (cachedState.error) {
        // –ï—Å–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ –±—ã–ª–∞ –æ—à–∏–±–∫–∞, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è —Å–Ω–æ–≤–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å
        return Promise.reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${normalizedUrl}`));
      }
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const loadPromise = new Promise<HTMLImageElement>((resolve, reject) => {
      const img = new Image();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
      img.onload = () => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        this.cache.set(normalizedUrl, {
          loaded: true,
          error: false,
          url: normalizedUrl,
          element: img,
          timestamp: Date.now()
        });
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–º–∏—Å –∏–∑ –∫–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∑–æ–∫
        this.loadPromises.delete(normalizedUrl);
        
        resolve(img);
      };
      
      img.onerror = () => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ –∫—ç—à
        this.cache.set(normalizedUrl, {
          loaded: false,
          error: true,
          url: normalizedUrl,
          timestamp: Date.now()
        });
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–º–∏—Å –∏–∑ –∫–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∑–æ–∫
        this.loadPromises.delete(normalizedUrl);
        
        reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${normalizedUrl}`));
      };
      
      // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      img.src = normalizedUrl;
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–∏—Å –≤ –∫–∞—Ä—Ç–µ –∑–∞–≥—Ä—É–∑–æ–∫
    this.loadPromises.set(normalizedUrl, loadPromise);
    
    return loadPromise;
  }

  /**
   * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
   * @param url URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –º–∞—Å—Å–∏–≤ URL
   */
  public preloadImage(url: string | string[] | undefined | null): void {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–ª–∏–¥–Ω—ã–º
    if (!url) {
      return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞ URL
    if (Array.isArray(url)) {
      url.forEach(urlItem => {
        if (urlItem) this.preloadImage(urlItem);
      });
      return;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (typeof url !== 'string' || url.trim() === '') {
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ JSON-—Å—Ç—Ä–æ–∫—É —Å –º–∞—Å—Å–∏–≤–æ–º
    if (url.startsWith('[') && url.endsWith(']')) {
      try {
        const parsedUrls = JSON.parse(url);
        if (Array.isArray(parsedUrls)) {
          parsedUrls.forEach(parsedUrl => {
            if (parsedUrl) this.preloadImage(parsedUrl);
          });
          return;
        }
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∫ –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
      }
    }
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º URL
    const normalizedUrl = this.normalizeUrl(url);
    
    // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if (this.cache.has(normalizedUrl) || this.loadPromises.has(normalizedUrl)) {
      return;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –≤–Ω–µ—à–Ω–∏–π URL, –Ω–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
    if (this.isExternalUrl(normalizedUrl)) {
      return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
    if (!this.preloadQueue.includes(normalizedUrl)) {
      this.preloadQueue.push(normalizedUrl);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
      if (!this.isProcessingQueue) {
        this.processPreloadQueue();
      }
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   */
  private async processPreloadQueue(): Promise<void> {
    if (this.isProcessingQueue) return;
    
    this.isProcessingQueue = true;
    
    while (this.preloadQueue.length > 0) {
      // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ N —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      const batchUrls = this.preloadQueue.splice(0, this.concurrentLoads);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      const loadPromises = batchUrls.map(url => 
        this.loadImage(url).catch(() => {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–µ
        })
      );
      
      // –ñ–¥–µ–º, –ø–æ–∫–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
      await Promise.all(loadPromises);
      
      // –ï—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –µ—â–µ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –¥–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É
      if (this.preloadQueue.length > 0) {
        await new Promise(resolve => setTimeout(resolve, 100));
      }
    }
    
    this.isProcessingQueue = false;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
   * @param url URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –º–∞—Å—Å–∏–≤ URL
   * @param type –¢–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (avatar, resume, project)
   * @returns URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
   */
  public getImageUrl(url: string | string[] | undefined | null, type: 'avatar' | 'resume' | 'project' | 'default' = 'default'): string {
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const defaultImageForType = {
      'avatar': this.defaultAvatarImage,
      'resume': this.defaultResumeImage,
      'project': this.defaultProjectImage,
      'default': this.defaultImage
    }[type];
    
    // –ï—Å–ª–∏ URL –Ω–µ —É–∫–∞–∑–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
    if (!url) {
      return defaultImageForType;
    }
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º URL
    const normalizedUrl = this.normalizeUrl(url);
    
    // –í–ê–ñ–ù–´–ô –§–ò–•: –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π URL, —á—Ç–æ–±—ã React –º–æ–≥ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ,
    // –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –≤ –∫—ç—à–µ. –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —è–≤–Ω–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
    return normalizedUrl;
  }

  /**
   * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ API
   */
  public async preloadFromApi(): Promise<void> {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ API...");
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
      const response = await fetch('/api/preload-resources');
      const data = await response.json();
      
      if (data.success && data.imageUrls) {
        console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏:", data.imageUrls.length, "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π");
        
        // –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ç–∏–ø–∞–º
        const stats = {
          "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏": 0,
          "–ü—Ä–æ–µ–∫—Ç—ã": 0,
          "–†–µ–∑—é–º–µ": 0,
          "–í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö": new Set(data.imageUrls).size
        };
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ URL
        data.imageUrls.forEach((url: string) => {
          // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
          if (url.includes('/users/')) stats["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"]++;
          if (url.includes('/projects/')) stats["–ü—Ä–æ–µ–∫—Ç—ã"]++;
          if (url.includes('/resumes/')) stats["–†–µ–∑—é–º–µ"]++;
          
          this.preloadImage(url);
        });
        
        console.log("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏:", stats);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:", error);
    }
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –∫—ç—à –æ—Ç —Å—Ç–∞—Ä—ã—Ö, –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   * @param maxAge –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∫—ç—à–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1 —á–∞—Å)
   */
  public clearOldCache(maxAge: number = 3600000): void {
    const now = Date.now();
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ –∫—ç—à–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–ø–∏—Å–∏
    for (const [url, state] of this.cache.entries()) {
      if (now - state.timestamp > maxAge) {
        // –ù–µ —É–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (url === this.defaultImage || 
            url === this.defaultAvatarImage || 
            url === this.defaultProjectImage || 
            url === this.defaultResumeImage) {
          continue;
        }
        this.cache.delete(url);
      }
    }
  }
}

export const imageService = ImageCache.getInstance();