import { useState } from 'react';
import { cn } from '@/lib/utils';

interface ProjectCardImageProps extends React.HTMLAttributes<HTMLDivElement> {
  photos: any; // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
  alt?: string;
  className?: string;
}

/**
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–æ–µ–∫—Ç–æ–≤
 * –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ DOM –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π
 */
export function ProjectCardImage({ 
  photos, 
  alt = "Project image", 
  className,
  ...props 
}: ProjectCardImageProps) {
  const [hasError, setHasError] = useState(false);
  const [isLoaded, setIsLoaded] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  const getImageSrc = (photos: any): string => {
    try {
      // –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (!photos) return window.location.origin + '/uploads/default-project.jpg';
      
      // –ú–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (Array.isArray(photos) && photos.length > 0) {
        let firstPhoto = photos[0];
        console.log("üéØ –ü—Ä—è–º–æ–π URL: –ò—Å–ø–æ–ª—å–∑—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞:", firstPhoto);
        if (!firstPhoto) return window.location.origin + '/uploads/default-project.jpg';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –∏ —Ö–æ—Å—Ç –∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–º—É URL
        if (firstPhoto.startsWith('/')) {
          return window.location.origin + firstPhoto;
        }
        return firstPhoto;
      }

      // JSON —Å—Ç—Ä–æ–∫–∞ —Å –º–∞—Å—Å–∏–≤–æ–º
      if (typeof photos === 'string') {
        // –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
        if (photos.startsWith('[') && photos.endsWith(']')) {
          try {
            const parsedPhotos = JSON.parse(photos);
            if (Array.isArray(parsedPhotos) && parsedPhotos.length > 0) {
              const firstPhoto = parsedPhotos[0];
              console.log("üéØ –ü—Ä—è–º–æ–π URL: –ò—Å–ø–æ–ª—å–∑—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ JSON –º–∞—Å—Å–∏–≤–∞:", firstPhoto);
              
              // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –∏ —Ö–æ—Å—Ç –∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–º—É URL
              if (firstPhoto.startsWith('/')) {
                return window.location.origin + firstPhoto;
              }
              return firstPhoto;
            }
          } catch (e) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
          }
        }
        
        // –û–¥–∏–Ω–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ (–ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é)
        if (photos.trim() !== '') {
          console.log("üéØ –ü—Ä—è–º–æ–π URL: –ò—Å–ø–æ–ª—å–∑—É—é —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –ø—É—Ç—å:", photos);
          
          // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –∏ —Ö–æ—Å—Ç –∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–º—É URL
          if (photos.startsWith('/')) {
            return window.location.origin + photos;
          }
          return photos;
        }
      }

      // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º URL
      return window.location.origin + '/uploads/default-project.jpg';
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", e);
      return window.location.origin + '/uploads/default-project.jpg';
    }
  };

  const handleError = () => {
    console.log("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
    setHasError(true);
  };

  const handleLoad = () => {
    console.log("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ");
    setIsLoaded(true);
    setHasError(false);
  };

  return (
    <div className={cn("relative h-48 w-full", className)} {...props}>
      {!isLoaded && (
        <div className="absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse" />
      )}
      <img
        src={getImageSrc(photos)}
        alt={alt}
        className={cn(
          "w-full h-full object-cover transition-transform duration-500 group-hover:scale-110",
          hasError && "opacity-0"
        )}
        onLoad={handleLoad}
        onError={handleError}
      />
    </div>
  );
}