import React, { useEffect, useState } from 'react';
import { useAuth } from '@/hooks/use-auth';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–∞–π—Ç–∞
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–∑—é–º–µ –∏ –∞–≤–∞—Ç–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –≤ –º–æ–º–µ–Ω—Ç –∑–∞–ø—É—Å–∫–∞ —Å–∞–π—Ç–∞
 */
export function ImagePreloadManager() {
  const { user } = useAuth();
  const [loaded, setLoaded] = useState(false);
  
  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    if (!loaded) {
      preloadAllImages();
    }
  }, [loaded]);
  
  const preloadAllImages = async () => {
    try {
      console.log('üì∏ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
      
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
      const [usersResponse, projectsResponse, resumesResponse] = await Promise.all([
        fetch('/api/users').then(res => res.ok ? res.json() : []),
        fetch('/api/projects').then(res => res.ok ? res.json() : []),
        fetch('/api/resumes').then(res => res.ok ? res.json() : [])
      ]);
      
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ URL –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const imageUrls: string[] = [];
      
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      imageUrls.push('/uploads/default.jpg');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      usersResponse.forEach((user: any) => {
        if (user.avatar) {
          const avatar = normalizeUrl(user.avatar);
          if (!imageUrls.includes(avatar)) {
            imageUrls.push(avatar);
          }
        }
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
      projectsResponse.forEach((project: any) => {
        if (project.photo) {
          const photo = normalizeUrl(project.photo);
          if (!imageUrls.includes(photo)) {
            imageUrls.push(photo);
          }
        }
      });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—é–º–µ
      resumesResponse.forEach((resume: any) => {
        if (resume.photo) {
          const photo = normalizeUrl(resume.photo);
          if (!imageUrls.includes(photo)) {
            imageUrls.push(photo);
          }
        }
      });
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
      await preloadImages(imageUrls);
      
      setLoaded(true);
      console.log(`‚úÖ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–æ ${imageUrls.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
      setLoaded(true); // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
    }
  };
  
  return null;
}

// –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function normalizeUrl(url: string): string {
  if (!url) return url;
  
  if (!url.startsWith('/') && !url.startsWith('http')) {
    return `/uploads/${url.split('/').pop()}`;
  }
  
  return url;
}

// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function preloadImages(urls: string[]): Promise<void> {
  return new Promise((resolve) => {
    // –ï—Å–ª–∏ –Ω–µ—Ç URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    if (!urls.length) {
      resolve();
      return;
    }
    
    let loaded = 0;
    const total = urls.length;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const onLoad = () => {
      loaded++;
      if (loaded === total) {
        resolve();
      }
    };
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    urls.forEach(url => {
      const img = new Image();
      img.onload = onLoad;
      img.onerror = onLoad; // –°—á–∏—Ç–∞–µ–º –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –∫–∞–∫ "–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ"
      img.src = url;
    });
    
    // –°—Ç—Ä–∞—Ö–æ–≤–∫–∞: —Ä–µ–∑–æ–ª–≤–∏–º –ø—Ä–æ–º–∏—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
    setTimeout(resolve, 5000);
  });
}